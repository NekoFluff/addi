// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "go-rest-api",
    "contact": {
      "name": "API Support",
      "email": "alexnou@gmail.com"
    },
    "version": "0.1.0"
  },
  "host": "protected-sea-18092.herokuapp.com",
  "paths": {
    "/dsp": {
      "post": {
        "description": "Get the optimal recipe",
        "summary": "Get the optimal recipe",
        "operationId": "getDSPRecipe",
        "parameters": [
          {
            "name": "recipeRequest",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipeRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipeResponse"
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/dsp/recipes": {
      "get": {
        "description": "Get all DSP recipes",
        "summary": "Get all DSP recipes",
        "operationId": "getDSPRecipes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipe"
              }
            }
          }
        }
      }
    },
    "/dsp/recipes/reload": {
      "post": {
        "description": "Re-scrapes the DSP recipes",
        "summary": "Re-scrapes the DSP recipes",
        "operationId": "reloadDSPRecipes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check on the health of the server",
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/inArt": {
      "get": {
        "description": "Get inART",
        "summary": "Get inART",
        "operationId": "getInArt",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the page to get",
            "name": "page",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InArt"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DSPMaterial": {
      "type": "object",
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DSPRecipe": {
      "type": "object",
      "required": [
        "name",
        "produce",
        "madeIn",
        "time",
        "materials"
      ],
      "properties": {
        "madeIn": {
          "type": "string"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DSPMaterial"
          }
        },
        "name": {
          "type": "string"
        },
        "produce": {
          "type": "number"
        },
        "time": {
          "type": "number"
        }
      }
    },
    "DSPRecipeRequest": {
      "type": "object",
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DSPRecipeResponse": {
      "type": "object",
      "required": [
        "produce",
        "madeIn",
        "numberOfFacilitiesNeeded",
        "consumesPerSec",
        "secondsSpendPerCrafting",
        "craftingPerSecond",
        "for"
      ],
      "properties": {
        "consumesPerSec": {
          "type": "object"
        },
        "craftingPerSecond": {
          "type": "number"
        },
        "for": {
          "type": "string"
        },
        "madeIn": {
          "type": "string"
        },
        "numberOfFacilitiesNeeded": {
          "type": "number"
        },
        "produce": {
          "type": "string"
        },
        "secondsSpendPerCrafting": {
          "type": "number"
        }
      }
    },
    "InArt": {
      "type": "object",
      "required": [
        "author",
        "tweetId",
        "url",
        "width",
        "height",
        "possiblySensitive"
      ],
      "properties": {
        "author": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "possiblySensitive": {
          "type": "boolean"
        },
        "tweetId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "go-rest-api",
    "contact": {
      "name": "API Support",
      "email": "alexnou@gmail.com"
    },
    "version": "0.1.0"
  },
  "host": "protected-sea-18092.herokuapp.com",
  "paths": {
    "/dsp": {
      "post": {
        "description": "Get the optimal recipe",
        "summary": "Get the optimal recipe",
        "operationId": "getDSPRecipe",
        "parameters": [
          {
            "name": "recipeRequest",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipeRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipeResponse"
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/dsp/recipes": {
      "get": {
        "description": "Get all DSP recipes",
        "summary": "Get all DSP recipes",
        "operationId": "getDSPRecipes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPRecipe"
              }
            }
          }
        }
      }
    },
    "/dsp/recipes/reload": {
      "post": {
        "description": "Re-scrapes the DSP recipes",
        "summary": "Re-scrapes the DSP recipes",
        "operationId": "reloadDSPRecipes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check on the health of the server",
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/inArt": {
      "get": {
        "description": "Get inART",
        "summary": "Get inART",
        "operationId": "getInArt",
        "parameters": [
          {
            "type": "integer",
            "description": "Numeric ID of the page to get",
            "name": "page",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InArt"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DSPMaterial": {
      "type": "object",
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DSPRecipe": {
      "type": "object",
      "required": [
        "name",
        "produce",
        "madeIn",
        "time",
        "materials"
      ],
      "properties": {
        "madeIn": {
          "type": "string"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DSPMaterial"
          }
        },
        "name": {
          "type": "string"
        },
        "produce": {
          "type": "number"
        },
        "time": {
          "type": "number"
        }
      }
    },
    "DSPRecipeRequest": {
      "type": "object",
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DSPRecipeResponse": {
      "type": "object",
      "required": [
        "produce",
        "madeIn",
        "numberOfFacilitiesNeeded",
        "consumesPerSec",
        "secondsSpendPerCrafting",
        "craftingPerSecond",
        "for"
      ],
      "properties": {
        "consumesPerSec": {
          "type": "object"
        },
        "craftingPerSecond": {
          "type": "number"
        },
        "for": {
          "type": "string"
        },
        "madeIn": {
          "type": "string"
        },
        "numberOfFacilitiesNeeded": {
          "type": "number"
        },
        "produce": {
          "type": "string"
        },
        "secondsSpendPerCrafting": {
          "type": "number"
        }
      }
    },
    "InArt": {
      "type": "object",
      "required": [
        "author",
        "tweetId",
        "url",
        "width",
        "height",
        "possiblySensitive"
      ],
      "properties": {
        "author": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "possiblySensitive": {
          "type": "boolean"
        },
        "tweetId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "type": "integer"
        }
      }
    }
  }
}`))
}

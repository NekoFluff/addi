// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "go-rest-api",
    "version": "0.1.0"
  },
  "paths": {
    "/dsp": {
      "post": {
        "description": "Get the optimal recipe",
        "summary": "Get the optimal recipe",
        "parameters": [
          {
            "name": "recipeRequest",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecipeRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipe"
              }
            }
          }
        }
      }
    },
    "/dsp/items": {
      "get": {
        "description": "Get all items",
        "summary": "Get all items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPItem"
              }
            }
          }
        }
      }
    },
    "/dsp/items/reload": {
      "post": {
        "description": "Re-scrapes the DSP items",
        "summary": "Re-scrapes the DSP items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check on the health of the server",
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DSPItem": {
      "properties": {
        "madeIn": {
          "type": "string"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DSPMaterial"
          }
        },
        "name": {
          "type": "string"
        },
        "produce": {
          "type": "number"
        },
        "time": {
          "type": "number"
        }
      }
    },
    "DSPMaterial": {
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Recipe": {
      "properties": {
        "consumesPerSec": {
          "type": "object"
        },
        "craftingPerSecond": {
          "type": "number"
        },
        "for": {
          "type": "string"
        },
        "madeIn": {
          "type": "string"
        },
        "numberOfFacilitiesNeeded": {
          "type": "number"
        },
        "produce": {
          "type": "string"
        },
        "secondsSpendPerCrafting": {
          "type": "number"
        }
      }
    },
    "RecipeRequest": {
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "go-rest-api",
    "version": "0.1.0"
  },
  "paths": {
    "/dsp": {
      "post": {
        "description": "Get the optimal recipe",
        "summary": "Get the optimal recipe",
        "parameters": [
          {
            "name": "recipeRequest",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecipeRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipe"
              }
            }
          }
        }
      }
    },
    "/dsp/items": {
      "get": {
        "description": "Get all items",
        "summary": "Get all items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DSPItem"
              }
            }
          }
        }
      }
    },
    "/dsp/items/reload": {
      "post": {
        "description": "Re-scrapes the DSP items",
        "summary": "Re-scrapes the DSP items",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "summary": "Check on the health of the server",
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DSPItem": {
      "properties": {
        "madeIn": {
          "type": "string"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DSPMaterial"
          }
        },
        "name": {
          "type": "string"
        },
        "produce": {
          "type": "number"
        },
        "time": {
          "type": "number"
        }
      }
    },
    "DSPMaterial": {
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Recipe": {
      "properties": {
        "consumesPerSec": {
          "type": "object"
        },
        "craftingPerSecond": {
          "type": "number"
        },
        "for": {
          "type": "string"
        },
        "madeIn": {
          "type": "string"
        },
        "numberOfFacilitiesNeeded": {
          "type": "number"
        },
        "produce": {
          "type": "string"
        },
        "secondsSpendPerCrafting": {
          "type": "number"
        }
      }
    },
    "RecipeRequest": {
      "required": [
        "name",
        "count"
      ],
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}`))
}
